str_view(dinheiro, "^[0-9]$", "")
str_view(dinheiro, "^.[0-9]$", "")
str_view(dinheiro, "^[0-9]*", "")
str_view(dinheiro, "^[R$]*", "")
str_view(dinheiro, "^[R$]", "")
str_replace(dinheiro, "^[R$]", "")
str_replace(dinheiro, "^[R & $]", "")
str_replace(dinheiro, "^[R | $]", "")
str_replace(dinheiro, "[^R$]", "")
str_view(dinheiro, "[^R$]")
str_view(dinheiro, "[^R^$]")
str_view(dinheiro, "[\\R$]")
str_view(dinheiro, "[\\R\\$]")
str_view(dinheiro, "[\\R^$]")
str_view(dinheiro, "[\\R\\"$""]")
str_view(dinheiro, "["$"]")
str_view(dinheiro, "$")
str_view(dinheiro, "`$`")
str_view(dinheiro, "^`$`")
str_view(dinheiro, "(R($))")
str_view(dinheiro, "($(R))")
str_view(dinheiro, "^\D")
str_view(dinheiro, "^\d")
str_view(dinheiro, "\d")
str_view(dinheiro, " \d ")
str_view(dinheiro, " 123... ")
str_view(dinheiro, "\D")
str_view(dinheiro, regex("\D"))
regex("\D")
str_view(dinheiro, " \w ")
str_view(dinheiro, " (\w) ")
str_view(dinheiro, " [\w] ")
str_view(dinheiro, "[\w]")
str_view(dinheiro, "\w")
str_view(dinheiro, "\W")
str_view(dinheiro, "W")
str_view(dinheiro, "W/")
str_view(dinheiro, "W/")
str_view(dinheiro, "")
str_view(dinheiro, "[^R-$]")
str_view(dinheiro, "[^R\\$]")
axinas201819[faxinas201819 == starts_with("R$")]
faxinas201819[faxinas201819 == starts_with("R$")]
faxinas201819[faxinas201819 == startsWith("R$")]
faxinas201819[faxinas201819 == "R$"]
faxinas201819[faxinas201819 == "*R$"]
faxinas201819[faxinas201819 == "R$"]
faxinas201819[faxinas201819 == with("R$")]
faxinas201819[faxinas201819 == with(str_view(),"R$")]
faxinas201819[faxinas201819 == with(str_view(),"[R$]")]
faxinas201819[faxinas201819 == with(str_view(),"^[R$]")]
as.numeric(faxinas201819)
as.numeric(faxinas201819$Valor)
# carregando pacotes para manipulação das planilhas
library("stringr")
library("tidyverse")
library("janitor")
library("readxl")
library("DT")
options(DT.options = list(pageLength = 5))
## ainda falta mudar formato de data na mesma ordem da brasileira
faxinas201819 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2018-2019]GerenciamentodoAplicativo.xlsx", skip = 1, col_names = TRUE)
# as.POSIXct(faxinas$Data, "UTC", format="%d/%m/%Y") tentar mudar pra as.POSIXct primeiro e depois pra as.Date
faxinas201819 <- faxinas201819 %>%
mutate(Data = as.numeric(Data), `Ocorreu?` = as.logical(`Ocorreu?`)) %>%
mutate(Data = convert_to_date(Data)) %>%
mutate(Valor = as.numeric(Valor),
`Ocorreu?` = as.character(`Ocorreu?`),
`Feedback Colhido?` = as.character(`Feedback Colhido?`)
) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
select(c(1:11)) %>% rename(Comentarios = "...11") %>%
remove_empty("rows")
faxinas201819[faxinas201819 == TRUE] <- "Sim"
faxinas201819[faxinas201819 == FALSE] <- "Não"
faxinas201819$Data <- format(faxinas201819$Data, "%d/%m/%Y")
# adicionando letras maiusculas a todos os nomes que nao começam com letra maiscula
# fazer funcao
# mudança_palavras <- function(vetor_de_palavras){
#   vetor_de_palavras <- str_trim(str_to_title(vetor_de_palavras))
# }
faxinas201819$Cliente <- str_trim(str_to_title(faxinas201819$Cliente))
faxinas201819$Comentarios <- str_trim(faxinas201819$Comentarios)
faxinas201819$Endereço <-  str_replace_all(faxinas201819$Endereço, "R\\.", "Rua ")
faxinas201819$Endereço <- str_replace_all(faxinas201819$Endereço, "R ", "Rua ")
faxinas201819$Endereço <- str_trim(str_to_title(faxinas201819$Endereço))
# nao consegui fazer encontrar um caractere antes de qualquer frase que nao começe com Rua,troquei manualmente
#faxinas201819$Endereço <- str_replace_all(faxinas201819$Endereço, "(Rua| )*", "Rua ")
# faxinas201819$Endereço <- str_trim(str_to_title(faxinas201819$Endereço))
# if(str_detect(faxinas201819$Endereço, "Rua", TRUE)){
#   faxinas201819$Endereço<- str_replace(faxinas201819$Endereço, pattern = "^*", "Rua ")
# }
# depois customizar a tabela com os tamanhos certos "custom table container"
# posso usar essa opcao de edicao para mudar coisas mais rápidas talvez
# adicionar show number of pags
datatable(
faxinas201819,
colnames = c('ID' = 1),
caption = htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 1: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2019.',)
),
editable = 'cell',
style = 'bootstrap',
extensions = c('Buttons'),
class = 'table-bordered',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', 'colvis')
)
)
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Ocorreu?` = as.logical(`Ocorreu?`), `Feedback Colhido?` = as.logical(`Feedback Colhido?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`), Remarcou = as.character(Remarcou)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
faxinas201920
faxinas201920[faxinas201920 == "TRUE"]
faxinas201920[faxinas201920 == TRUE]
## ainda falta mudar formato de data na mesma ordem da brasileira
faxinas201819 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2018-2019]GerenciamentodoAplicativo.xlsx", skip = 1, col_names = TRUE)
# carregando pacotes para manipulação das planilhas
library("stringr")
library("tidyverse")
library("janitor")
library("readxl")
library("DT")
options(DT.options = list(pageLength = 5))
## ainda falta mudar formato de data na mesma ordem da brasileira
faxinas201819 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2018-2019]GerenciamentodoAplicativo.xlsx", skip = 1, col_names = TRUE)
# as.POSIXct(faxinas$Data, "UTC", format="%d/%m/%Y") tentar mudar pra as.POSIXct primeiro e depois pra as.Date
faxinas201819 <- faxinas201819 %>%
mutate(Data = as.numeric(Data), `Ocorreu?` = as.logical(`Ocorreu?`)) %>%
mutate(Data = convert_to_date(Data)) %>%
mutate(Valor = as.numeric(Valor),
`Ocorreu?` = as.character(`Ocorreu?`),
`Feedback Colhido?` = as.character(`Feedback Colhido?`)
) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
select(c(1:11)) %>% rename(Comentarios = "...11") %>%
remove_empty("rows")
faxinas201819[faxinas201819 == TRUE] <- "Sim"
faxinas201819[faxinas201819 == FALSE] <- "Não"
faxinas201819$Data <- format(faxinas201819$Data, "%d/%m/%Y")
# adicionando letras maiusculas a todos os nomes que nao começam com letra maiscula
# fazer funcao
# mudança_palavras <- function(vetor_de_palavras){
#   vetor_de_palavras <- str_trim(str_to_title(vetor_de_palavras))
# }
faxinas201819$Cliente <- str_trim(str_to_title(faxinas201819$Cliente))
faxinas201819$Comentarios <- str_trim(faxinas201819$Comentarios)
faxinas201819$Endereço <-  str_replace_all(faxinas201819$Endereço, "R\\.", "Rua ")
faxinas201819$Endereço <- str_replace_all(faxinas201819$Endereço, "R ", "Rua ")
faxinas201819$Endereço <- str_trim(str_to_title(faxinas201819$Endereço))
# nao consegui fazer encontrar um caractere antes de qualquer frase que nao começe com Rua,troquei manualmente
#faxinas201819$Endereço <- str_replace_all(faxinas201819$Endereço, "(Rua| )*", "Rua ")
# faxinas201819$Endereço <- str_trim(str_to_title(faxinas201819$Endereço))
# if(str_detect(faxinas201819$Endereço, "Rua", TRUE)){
#   faxinas201819$Endereço<- str_replace(faxinas201819$Endereço, pattern = "^*", "Rua ")
# }
# depois customizar a tabela com os tamanhos certos "custom table container"
# posso usar essa opcao de edicao para mudar coisas mais rápidas talvez
# adicionar show number of pags
datatable(
faxinas201819,
colnames = c('ID' = 1),
caption = htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 1: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2019.',)
),
editable = 'cell',
style = 'bootstrap',
extensions = c('Buttons'),
class = 'table-bordered',
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', 'colvis')
)
)
## ainda falta mudar formato de data na mesma ordem da brasileira
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`), Remarcou = as.character(Remarcou)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
#removendo as ultimas linha que so contem NA
faxinas201920 <- faxinas201920 %>%  filter(Data != "NA")
faxinas201920[faxinas201920 == TRUE] <- "Sim"
faxinas201920
## ainda falta mudar formato de data na mesma ordem da brasileira
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`), Remarcou = as.character(Remarcou)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
#removendo as ultimas linha que so contem NA
faxinas201920 <- faxinas201920 %>%  filter(Data != "NA")
faxinas201920[faxinas201920 == TRUE] <- "Sim"
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
as.integer(faxinas201920$`Ocorreu?`)
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.integer(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`), Remarcou = as.character(Remarcou),
`Ocorreu?` = as.character(faxinas201920$`Ocorreu?`)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.integer(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor))
faxinas201920
faxinas201819$`Feedback Colhido?`
faxinas201920$`Feedback Colhido?`
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.integer(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)) %>%
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.integer(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920
## ainda falta mudar formato de data na mesma ordem da brasileira
faxinas201819 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2018-2019]GerenciamentodoAplicativo.xlsx", skip = 1, col_names = TRUE)
faxinas201819
as.logical(faxinas201819$Ocorreu?)
as.logical(faxinas201819$`Ocorreu?`)
class(faxinas201819$`Ocorreu?`)
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
class(faxinas201920$`Ocorreu?`)
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201819
faxinas201920
class(faxinas201920$`Ocorreu?`)
as.logical(faxinas201920$`Ocorreu?`)
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`))
faxinas201920
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)
)
faxinas201920
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
#removendo as ultimas linha que so contem NA
faxinas201920 <- faxinas201920 %>%  filter(Data != "NA")
faxinas201920[faxinas201920 == TRUE] <- "Sim"
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
#removendo as ultimas linha que so contem NA
faxinas201920 <- faxinas201920 %>%  filter(Data != "NA") %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`),
`Ocorreu?` = as.character(faxinas201920$`Ocorreu?`),
Remarcou = as.character(Remarcou))
faxinas201920
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
faxinas201920
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
faxinas201920
faxinas201920 <- faxinas201920 %>%
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)) %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`),
`Ocorreu?` = as.character(faxinas201920$`Ocorreu?`),
Remarcou = as.character(Remarcou))
faxinas201920
faxinas201920[faxinas201920 == TRUE] <- "Sim"
faxinas201920[faxinas201920 == "TRUE"] <- "Sim"
faxinas201920[faxinas201920 == "FALSE"] <- "Não"
faxinas201920[faxinas201920 == "1"] <- "Sim"
faxinas201920[faxinas201920 == "TRUE"] <- "Sim"
faxinas201920
faxinas201920[faxinas201920 == "TRUE"] <- "Sim"
faxinas201920[faxinas201920 == "FALSE"] <- "Não"
faxinas201920[faxinas201920$`Ocorreu?` == "1"] <- "Sim"
faxinas201920[faxinas201920$`Ocorreu?` == 1] <- "Sim"
faxinas201920$`Ocorreu?`
faxinas201920[faxinas201920$`Ocorreu?` == "1"] <- "Sim"
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
#removendo as ultimas linha que so contem NA
faxinas201920 <- faxinas201920 %>%
mutate(`Ocorreu?` = as.logical(faxinas201920$`Ocorreu?`)) %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`),
`Ocorreu?` = as.character(faxinas201920$`Ocorreu?`),
Remarcou = as.character(Remarcou))
faxinas201920
as.logical(faxinas201920$`Ocorreu?`)
as.numeric(faxinas201920$`Ocorreu?`)
faxinas201920$`Ocorreu?`
as.numeric(faxinas201920$`Ocorreu?`)
sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
#removendo as ultimas linha que so contem NA
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`),
`Ocorreu?` = as.character(faxinas201920$`Ocorreu?`),
Remarcou = as.character(Remarcou))
faxinas201920
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
`Ocorreu?` = as.numeric(faxinas201920$`Ocorreu?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
#removendo as ultimas linha que so contem NA
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`),
`Ocorreu?` = as.character(faxinas201920$`Ocorreu?`),
Remarcou = as.character(Remarcou))
faxinas201920
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920
faxinas201920$`Ocorreu?`
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`),
`Ocorreu?` = as.character(faxinas201920$`Ocorreu?`),
Remarcou = as.character(Remarcou)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920
faxinas201920[faxinas201920 == "1.0"] <- "Sim"
faxinas201920[faxinas201920$`Ocorreu?` == "1.0"] <- "Sim"
faxinas201920[faxinas201920$`Ocorreu?` == "1.0"] <- "1"
faxinas201920[faxinas201920$`Ocorreu?` == "1.0"]
faxinas201920[faxinas201920$`Ocorreu?` == 1.0]
## ainda falta mudar formato de data na mesma ordem da brasileira
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`),
`Ocorreu?` = as.character(faxinas201920$`Ocorreu?`),
Remarcou = as.character(Remarcou)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`),
Remarcou = as.character(Remarcou)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920$Data <- format(faxinas201920$Data, "%d/%m/%Y")
faxinas201920[faxinas201920 == "TRUE"] <- "Sim"
faxinas201920[faxinas201920 == "FALSE"] <- "Não"
#removendo as ultimas linha que so contem NA
faxinas201920 <- faxinas201920 %>%  filter(Data != "NA")
faxinas201920$Cliente <- str_trim(str_to_title(faxinas201920$Cliente))
faxinas201920$Endereço <- str_trim(str_to_title(faxinas201920$Endereço))
faxinas201920$Comentários <- str_trim(faxinas201920$Comentários)
faxinas201920$Endereço <-  str_replace_all(faxinas201920$Endereço, "R\\.", "Rua ")
faxinas201920$Endereço <- str_replace_all(faxinas201920$Endereço, "R ", "Rua ")
faxinas201920$Endereço <- str_trim(str_to_title(faxinas201920$Endereço))
faxinas201920
as.logical(faxinas201920$`Ocorreu?`
)
as.numeric(faxinas201920$`Ocorreu?`)
as.logical(as.numeric(faxinas201920$`Ocorreu?`))
faxinas201920$`Ocorreu?` <- as.logical(as.numeric(faxinas201920$`Ocorreu?`))
faxinas201920
faxinas201920
faxinas201920$`Ocorreu?`[faxinas201819$`Ocorreu?` == TRUE]
faxinas201920$`Ocorreu?`[faxinas201819$`Ocorreu?` == TRUE] <- 'SIM'
faxinas201920$`Ocorreu?`[faxinas201819$`Ocorreu?` == TRUE] <- "SIM"
faxinas201920$`Ocorreu?`[faxinas201819$`Ocorreu?` == "TRUE"] <- "SIM"
faxinas201920$`Ocorreu?` <- as.numeric(faxinas201920$`Ocorreu?`)
faxinas201920
