panel.grid.minor = element_line(colour = "gray",
size = 0.5, linetype = "solid"),
panel.border = element_rect(fill = "transparent"),
axis.text.x =  element_blank()) +
scale_fill_viridis_d() + scale_x_discrete(expand = c(0, 0))
m2<-ggplotly(m2, tooltip = c("x", "y"))
m2
runApp()
m2<-ggplot(faxinas%>%mutate(Quantidade=1)%>%
filter(Mulher != "NA" & Mulher != "Maria" & `Ocorreu?`=="Sim"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun="sum", geom="bar")+
facet_wrap(~Mulher, scales = "free_x")+
ggtitle("Quantidade de Faxinas por Mulher e Dia da Semana")+
ylab("Quantidade de faxinas") +
theme(strip.background =
element_rect(colour = "black", fill = "#99CCFF"),
axis.title.x = element_blank(),
panel.background = element_rect(fill = "white"),
panel.grid.major = element_line(colour = "gray",
size = 1, linetype = "solid"),
panel.grid.minor = element_line(colour = "gray",
size = 1, linetype = "solid"),
panel.border = element_rect(fill = "transparent"),
axis.text.x =  element_blank()) +
scale_fill_viridis_d() + scale_x_discrete(expand = c(0, 0))
m2<-ggplotly(m2, tooltip = c("x", "y"))
m2
m2<-ggplot(faxinas%>%mutate(Quantidade=1)%>%
filter(Mulher != "NA" & Mulher != "Maria" & `Ocorreu?`=="Sim"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun="sum", geom="bar")+
facet_wrap(~Mulher, scales = "free_x")+
ggtitle("Quantidade de Faxinas por Mulher e Dia da Semana")+
ylab("Quantidade de faxinas") +
theme(strip.background =
element_rect(colour = "black", fill = "#99CCFF"),
axis.title.x = element_blank(),
panel.background = element_rect(fill = "white", size = 2),
panel.grid.major = element_line(colour = "gray",
size = 1, linetype = "solid"),
panel.grid.minor = element_line(colour = "gray",
size = 1, linetype = "solid"),
panel.border = element_rect(fill = "transparent"),
axis.text.x =  element_blank()) +
scale_fill_viridis_d() + scale_x_discrete(expand = c(0, 0))
m2<-ggplotly(m2, tooltip = c("x", "y"))
m2
m2<-ggplot(faxinas%>%mutate(Quantidade=1)%>%
filter(Mulher != "NA" & Mulher != "Maria" & `Ocorreu?`=="Sim"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun="sum", geom="bar")+
facet_wrap(~Mulher, scales = "free_x")+
ggtitle("Quantidade de Faxinas por Mulher e Dia da Semana")+
ylab("Quantidade de faxinas") +
theme(strip.background =
element_rect(colour = "black", fill = "#99CCFF"),
axis.title.x = element_blank(),
panel.background = element_rect(fill = "white", size = 2),
panel.grid.major = element_line(colour = "gray",
size = 2, linetype = "solid"),
panel.grid.minor = element_line(colour = "gray",
size = 2, linetype = "solid"),
panel.border = element_rect(fill = "transparent"),
axis.text.x =  element_blank()) +
scale_fill_viridis_d() + scale_x_discrete(expand = c(0, 0))
m2<-ggplotly(m2, tooltip = c("x", "y"))
m2
m2<-ggplot(faxinas%>%mutate(Quantidade=1)%>%
filter(Mulher != "NA" & Mulher != "Maria" & `Ocorreu?`=="Sim"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun="sum", geom="bar")+
facet_wrap(~Mulher, scales = "free_x")+
ggtitle("Quantidade de Faxinas por Mulher e Dia da Semana")+
ylab("Quantidade de faxinas") +
theme(strip.background =
element_rect(colour = "black", fill = "#99CCFF"),
axis.title.x = element_blank(),
panel.background = element_rect(fill = "white", size = 2),
panel.grid.major = element_line(colour = "gray",
size = 1, linetype = "solid"),
panel.grid.minor = element_line(colour = "gray",
size = 1, linetype = "solid"),
axis.text.x =  element_blank()) +
scale_fill_viridis_d() + scale_x_discrete(expand = c(0, 0))
m2<-ggplotly(m2, tooltip = c("x", "y"))
m2
runApp()
m2<-ggplot(faxinas%>%mutate(Quantidade=1)%>%
filter(Mulher != "NA" & Mulher != "Maria" & `Ocorreu?`=="Sim"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun="sum", geom="bar")+
facet_wrap(~Mulher, scales = "free_x")+
ggtitle("Quantidade de Faxinas por Mulher e Dia da Semana")+
ylab("Quantidade de faxinas") +
theme(strip.background =
element_rect(colour = "black", fill = "#99CCFF"),
axis.title.x = element_blank(),
panel.background = element_rect(fill = "white", size = 2),
panel.grid.major = element_line(colour = "gray",
size = 1, linetype = "solid"),
panel.grid.minor = element_line(colour = "gray",
size = 1, linetype = "solid"),
axis.text.x =  element_blank(),
axis.line = element_line(colour = "black")) +
scale_fill_viridis_d() + scale_x_discrete(expand = c(0, 0))
m2<-ggplotly(m2, tooltip = c("x", "y"))
m2
runApp()
m1<-ggplot(faxinas%>%mutate(Quantidade=1)%>%
filter(Mulher != "NA" & Mulher != "Maria" & `Ocorreu?`=="Sim"),
aes(x=Mulher,y=Quantidade,fill=Mulher)) +
stat_summary(fun="sum", geom="bar") +
ggtitle("Quantidade de Faxinas por Mulher")+
ylab("Quantidade de faxinas") +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.line = element_line(colour = "black"),
panel.background = element_rect(fill = "white", size = 2),
panel.grid.major = element_line(colour = "gray",
size = 1, linetype = "solid"),
panel.grid.minor = element_line(colour = "gray",
size = 1, linetype = "solid")) +
scale_fill_viridis_d()
m1<-ggplotly(m1, tooltip = c("x", "y"))
m1
m1<-ggplot(faxinas%>%mutate(Quantidade=1)%>%
filter(Mulher != "NA" & Mulher != "Maria" & `Ocorreu?`=="Sim"),
aes(x=Mulher,y=Quantidade,fill=Mulher)) +
stat_summary(fun="sum", geom="bar") +
ggtitle("Quantidade de Faxinas por Mulher")+
ylab("Quantidade de faxinas") +
theme(legend.position = 'none',
axis.line = element_line(colour = "black"),
panel.background = element_rect(fill = "white", size = 2),
panel.grid.major = element_line(colour = "gray",
size = 1, linetype = "solid"),
panel.grid.minor = element_line(colour = "gray",
size = 1, linetype = "solid")) +
scale_fill_viridis_d()
m1<-ggplotly(m1, tooltip = c("x", "y"))
m1
m1<-ggplot(faxinas%>%mutate(Quantidade=1)%>%
filter(Mulher != "NA" & Mulher != "Maria" & `Ocorreu?`=="Sim"),
aes(x=Mulher,y=Quantidade,fill=Mulher)) +
stat_summary(fun="sum", geom="bar") +
ggtitle("Quantidade de Faxinas por Mulher")+
ylab("Quantidade de faxinas") +
theme(legend.position = 'none',
axis.title.x = element_blank(),
axis.line = element_line(colour = "black"),
panel.background = element_rect(fill = "white", size = 2),
panel.grid.major = element_line(colour = "gray",
size = 1, linetype = "solid"),
panel.grid.minor = element_line(colour = "gray",
size = 1, linetype = "solid")) +
scale_fill_viridis_d()
m1<-ggplotly(m1, tooltip = c("x", "y"))
m1
runApp()
shiny::runApp()
runApp()
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 3: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border stripe'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', 'colvis')
)
)
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 3: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border stripe'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', 'colvis')
)
)
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 3: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border stripe'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', 'colvis')
)
)
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 3: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border stripe'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', 'colvis')
)
)
# carregando pacotes para manipulação das planilhas
library("stringr")
library("tidyverse")
library("readxl")
library("DT")
library("rebus")
library("flexdashboard")
options(DT.options = list(
paging = TRUE,
columnDefs = list(list(className = 'dt-center', targets = 5)),
pageLength = 5,
lengthMenu = list(c(5, 15, -1), c('5', '15', 'All'))))
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 3: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border stripe'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', 'colvis')
)
)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
datatable(head(iris, 20), options = list(
columnDefs = list(list(className = 'dt-center', targets = 5)),
pageLength = 5,
lengthMenu = c(5, 10, 15, 20)
))
# depois customizar a tabela com os tamanhos certos "custom table container"
datatable(
faxinas201920,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 2: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2019 a 2020.',)
),
class = c('cell-border'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print')
)
)
datatable(
faxinas201920,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 2: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2019 a 2020.',)
),
class = c('cell-border'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print')
)
)
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 3: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', list(colvis = 'Colunas visiveís:'))
)
)
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 3: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', list(colvis = 'Colunas visiveís:'))
)
)
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 3: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', 'colvis' = 'Colunas visiveís:')
)
)
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 3: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print', 'Colunas visiveís')
)
)
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 3: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('csv', 'excel', 'pdf', 'print')
)
)
runApp()
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 1: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('show','csv', 'excel', 'pdf', 'print')
)
)
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 1: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('Show entries','csv', 'excel', 'pdf', 'print')
)
)
datatable(
faxinas,
colnames = c('ID' = 1),
caption =  htmltools::tags$caption(
style = 'caption-side: top; text-align: left; color:blue; font-size: 16px',
'Tabela 1: ',
htmltools::em('Gerenciamento do Aplicativo entre o período de 2018 a 2020.',)
),
class = c('cell-border'),
extensions = c('Buttons'),
options = list(
dom = 'Bfrtip',
buttons = c('Show','csv', 'excel', 'pdf', 'print')
)
)
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
shiny::runApp()
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
source('~/Documents/PURECO-BAS/Pureco/Tabs.R')
