str_view(testepalavra, "Rua\")
)
str_view(testepalavra, "Rua\")
str_view(testepalavra, "Rua\")
str_view(testepalavra, "[^Rua{1}]\\ ")
str_view(testepalavra, "[^Rua\ ")
str_view(testepalavra, "^Rua\ ")
str_view(testepalavra, "Rua\ ")
str_view(testepalavra, "Rua\")
str_view(testepalavra, "\Rua")
str_view(testepalavra, "Rua\*")
str_view(testepalavra, "Rua\.")
str_view(testepalavra, "Rua\")
str_view(testepalavra, "Rua\\")
str_view(testepalavra, "Rua\\")
str_view(testepalavra, "Rua\")
str_view(testepalavra, "Rua\+")
str_view(testepalavra, "(\t)")
str_view(testepalavra, "\t")
str_view(testepalavra, "\s")
str_view(testepalavra, "*\s)
str_view(testepalavra, "*\s")
str_view(testepalavra, ""*\s")
str_view(testepalavra, " "*\s ")
regex(testepalavra, " "*\s ")
regex(testepalavra, *\s )
regex(testepalavra, "*\s )
regex(testepalavra, \d\.\s+abc )
regex(testepalavra, "\d\.\s+abc" )
gsub(testepalavra, "\d\.\s+abc" )
sub(testepalavra, "\d\.\s+abc" )
str_view(testepalavra, "\d\.\s+abc" )
str_view(testepalavra, "\s+abc" )
str_view(testepalavra, "\+abc" )
str_view(testepalavra, "+abc" )
str_view(testepalavra, "+abc" )
str_view(testepalavra, "\+abc" )
str_view(testepalavra, "\abc" )
str_view(testepalavra, "[^Rua]$ )
str_view(testepalavra, "[^Rua]$" )
str_view(testepalavra, "[^Rua]$\" )
str_view(testepalavra, "[^Rua]$\" )
str_view(testepalavra,"[^Rua]$\" )
)
str_view(testepalavra,"^Rua $\" )
str_view(testepalavra,"^Rua $\")
str_view(testepalavra, "^Rua$")
str_view(testepalavra, "^Rua$ ")
str_view(testepalavra, "^Rua$\")
str_view(testepalavra, "^Rua$")
str_view(testepalavra, "^Rua$" )
str_view(testepalavra, "^Rua$"\ )
str_view(testepalavra, "(^Rua$)")
str_view(testepalavra, "^(^Rua$)")
str_view(testepalavra, "^[^Rua$]")
str_view(testepalavra, "^[^Rua$] ")
str_view(testepalavra, " ^[^Rua$]")
str_view(testepalavra, "^[^Rua$]")
str_view(testepalavra, "^[^Rua$]?")
str_view(testepalavra, "?^[^Rua$]")
str_view(testepalavra, "^[^Rua$?]")
str_view(testepalavra, "^[^Rua$]?")
str_view(testepalavra, "^[^Rua$?]?")
str_view(testepalavra, "^[^Rua$]?")
str_view(testepalavra, "^[^Rua$?]?")
str_view(testepalavra, "^[^Rua?$?]?")
str_view(testepalavra, "^[^Rua?$?]")
str_view(testepalavra, "^[^Rua?$]")
str_view(testepalavra, "^[^Rua?$]$")
str_view(testepalavra, "^[^Rua?$]*")
str_view(testepalavra, "^[^Rua?$]*\")
str_view(testepalavra, "^[^Rua?$]*\\")
str_view(testepalavra, "^[^Rua?$]*\\ ")
str_view(testepalavra, "^[^Rua?$]\\ ")
str_view(testepalavra, "^[^Rua$]\\ ")
str_view(testepalavra, "^[^Rua$]\\? ")
str_view(testepalavra, "^[^Rua$]\\?")
str_view(testepalavra, "^[^Rua$]\\")
str_view(testepalavra, "^[^Rua$]")
str_view(testepalavra, "^[^Rua$]?")
str_view(testepalavra, "^[^Rua$]? ")
str_view(testepalavra, "^[^Rua$] ?")
str_view(testepalavra, "^[^Rua$]?")
str_view(testepalavra, "^[^Rua$]?^[A-Z]")
str_view(testepalavra, "^[^Rua$]?[^A-Z]")
str_view(testepalavra, "^[^Rua$]?[^A?-Z]")
str_view(testepalavra, "^[^Rua$]?[^A?-Z?]")
str_view(testepalavra, "^[^Rua$]?[^A-Z?]")
str_view(testepalavra, "^[^Rua$]?[^A-Z]")
str_view(testepalavra, "^[^Rua$]?[^A-Z]?")
str_view(testepalavra, "^[^Rua$]?[^A-Z]??")
str_view(testepalavra, "^[^Rua$]?^[^A-Z]??")
str_view(testepalavra, "^[^A-Z]??")
str_view(testepalavra, "^[^A-Z]?? & ^[^Rua$]")
str_view(testepalavra, "^[^A-Z]?? & [^Rua$]")
str_view(testepalavra, "^[^A-Z]?? & [Rua]")
str_view(testepalavra, "^[^A-Z]?? & [^Rua]")
str_view(testepalavra, "^[^A-Z]?? & ^Rua")
str_view(testepalavra, "^[^A-Z]?? | ^Rua")
str_view(testepalavra, "^[^A-Z]?? | ^R")
str_view(testepalavra, "^[^A-Z]?? | )
str_view(testepalavra, "^[^A-Z]?? | ")
str_view(testepalavra, "^[^A-Z]??| ")
str_view(testepalavra, "^[^A-Z]??|")
str_view(testepalavra, " \Rua$")
str_view(testepalavra, " \\Rua$")
str_view(testepalavra, "\\Rua$")
str_view(testepalavra, "^\\Rua$")
str_view(testepalavra, "^\Rua$")
str_view(testepalavra, "^ \\Rua$")
str_view(testepalavra, "^ ")
str_view(testepalavra, " ")
str_view(testepalavra, "")
str_view(testepalavra, "\")
str_view(testepalavra, "^")
str_view(testepalavra, "^ ")
str_view(testepalavra, "^")
str_view(testepalavra, "^(Rua)")
str_view(testepalavra, "^( Rua)")
str_view(testepalavra, "^ (Rua)")
str_view(testepalavra, "^(Rua)")
str_view(testepalavra, "^(^Rua)")
str_view(testepalavra, "^(^R^u^a)")
str_view(testepalavra, "^(^Rua)")
str_view(testepalavra, "^(^Rua.)")
str_view(testepalavra, "^(^Rua.+)")
str_view(testepalavra, "(^Rua.+)")
str_view(testepalavra, "^ (^Rua.+)")
str_view(testepalavra, "^(Rua.+)")
str_view(testepalavra, "(Rua.+)")
str_view(testepalavra, "(Rua.+)$")
str_view(testepalavra, "(Rua)$")
str_view(testepalavra, "(^Rua)$")
str_view(testepalavra, "^(^Rua)$")
str_view(testepalavra, "^\(^Rua)$")
str_view(testepalavra, "^\\(^Rua)$")
str_view(testepalavra, "^(^Rua)$\")
str_view(testepalavra, "(\w+ (\d+))")
str_view(testepalavra, "(^ (\d+))")
str_view(testepalavra, "(^ (Rua))")
str_view(testepalavra, "(^(Rua))")
str_view(testepalavra, "(^(Rua)$)")
str_view(testepalavra, "(^(Rua)*)")
str_view(testepalavra, "(^(^Rua)*)")
str_view(testepalavra, "((^Rua)*)")
str_view(testepalavra, "((^Rua))")
str_view(testepalavra, "(^(^Rua)*)")
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "(^(^Rua$)$*)")
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "(^$(^Rua$)*)")
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "(^(^Rua$)*)-")
str_view(testepalavra, "(^(^Rua$)*)^")
str_view(testepalavra, "(^(^Rua$)*)^")
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "[(^(^Rua$)*)]")
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "(^(^Rua$)[*])")
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "(^(^Rua|$)*)")
str_view(testepalavra, "(^(^Rua| $)*)")
str_view(testepalavra, "(^(^(Rua| )$)*)")
str_view(testepalavra, "(^(^(Rua|)$)*)")
str_view(testepalavra, "(^(^(Rua|))*)")
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "(^(^Rua$)*\)")
str_view(testepalavra, "(^(^Rua$)*\\)")
str_view(testepalavra, "(^(^Rua$)*)\")
str_view(testepalavra, "(^(^Rua$)*)\\")
str_view(testepalavra, "(^(^Rua$)*)\")
str_view(testepalavra, "(^(^Rua$)*)\.")
str_view(testepalavra, "(^(^Rua$)*)\*")
str_view(testepalavra, "(^(^Rua$))\*")
str_view(testepalavra, "(^(^Rua$))\\*")
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "(^(^Rua\\)*)")
str_view(testepalavra, "(^(^Rua\\))")
str_view(testepalavra, "(^(Rua\\))")
str_view(testepalavra, "(^$(Rua\\))")
str_view(testepalavra, "(^$(Rua\))")
str_view(testepalavra, "(^$(Rua\\$))")
str_view(testepalavra, "(^(Rua\\$))")
str_view(testepalavra, "(^(Rua\\$*))")
str_view(testepalavra, "(^(Rua\\*))")
str_view(testepalavra, "(^(^Rua\\*))")
str_view(testepalavra, "(^(^Rua\\))")
str_view(testepalavra, "(^(^Rua\\$))")
str_view(testepalavra, "(^(^Rua\\$))$")
str_view(testepalavra, "(^(^Rua\\$))*")
str_view(testepalavra, "^[^A-Za-z]*[^\\Rua]")
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "(^(^Rua$)*)(^(^Rua\\$))")
str_view(testepalavra, "(^(^Rua$)*)& (^(^Rua\\$))")
str_view(testepalavra, "(^(^Rua$)*)|(^(^Rua\\$))")
str_view(testepalavra, "(^(^Rua$)*)|((^Rua\\$))")
str_view(testepalavra, "(^(^Rua$)*)|((^Rua\\))")
str_view(testepalavra, "(^(^Rua$)*)|((Rua\\))")
str_view(testepalavra, "(^(^Rua$)*)|(Rua\\)")
str_view(testepalavra, "(^(^Rua$)*)|^(Rua\\)")
str_view(testepalavra, "(^(^Rua$)*)|^Rua\\")
str_view(testepalavra, "(^(^Rua$)*)|^Rua")
str_view(testepalavra, "(^(^Rua$)*))
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "(^(^Rua$)*)|^Rua")
str_view(testepalavra, "(^(^Rua$)*)")
str_replace(testepalavra, "(^(^Rua$)*)", "Rua")
str_replace(testepalavra, "(^(^Rua$)*)", "Rua ")
faxinas201819 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2018-2019]GerenciamentodoAplicativo.xlsx", skip = 1, col_names = TRUE)
# as.POSIXct(faxinas$Data, "UTC", format="%d/%m/%Y") tentar mudar pra as.POSIXct primeiro e depois pra as.Date
faxinas201819 <- faxinas201819 %>%
mutate(Data = as.numeric(Data), `Ocorreu?` = as.logical(`Ocorreu?`)) %>%
mutate(Data = convert_to_date(Data)) %>%
mutate(Valor = as.numeric(Valor),
`Ocorreu?` = as.character(`Ocorreu?`),
`Feedback Colhido?` = as.character(`Feedback Colhido?`)
) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
select(c(1:11)) %>% rename(Comentarios = "...11") %>%
remove_empty("rows")
faxinas201819[faxinas201819 == TRUE] <- "Sim"
faxinas201819[faxinas201819 == FALSE] <- "Não"
faxinas201819$Data <- format(faxinas201819$Data, "%d/%m/%Y")
faxinas201819$Cliente <- str_trim(str_to_title(faxinas201819$Cliente))
faxinas201819$Comentarios <- str_trim(faxinas201819$Comentarios)
faxinas201819$Endereço <-  str_replace_all(faxinas201819$Endereço, "R\\.", "Rua ")
faxinas201819$Endereço <- str_replace_all(faxinas201819$Endereço, "R ", "Rua ")
View(faxinas201819)
str_view(testepalavra, "(^(^Rua$)*)")
testepalavra
testepalavra <- c("Roxo", "rua", "Rua", "Rua ", "Ademir", "Jose", "Av", "Av.", "Avenida")
str_view(testepalavra, "(^(^Rua$)*)")
testepalavra <- c("Roxo", "rua", "Rua", "Ademir", "Jose", "Av", "Av.", "Avenida")
str_view(testepalavra, "(^(^Rua$)*)")
testepalavra <- c("Roxo", Rua", "Ademir", "Jose", "Av", "Av.", "Avenida")
testepalavra <- c("Roxo", "Rua", "Ademir", "Jose", "Av", "Av.", "Avenida")
str_view(testepalavra, "(^(^Rua$)*)")
str_view(testepalavra, "(^(^Rua$)*)|(Av\.)")
str_view(testepalavra, "(^(^Rua$)*)|(Av\\.)")
str_view(testepalavra, "(^(^Rua$)*)|(Av)")
str_view(testepalavra, "(^(^Rua$)*)|^(Av)")
str_view(testepalavra, "(^(^Rua$)*)|^Av")
str_view(testepalavra, "(^(^Rua$)*)|[^Av]")
str_view(testepalavra, "(^(^Rua$)*)|[^A-v]")
str_view(testepalavra, "(^(^Rua$)*)")
str_replace(testepalavra, "(^(^Rua$)*)", "Rua")
testepalavra3 <- str_replace(testepalavra, "(^(^Rua$)*)", "Rua")
testepalavra3
str_replace(testepalavra, "(^(^Rua$)*)", "Rua ")
testepalavra3 <- str_replace(testepalavra, "(^(^Rua$)*)", "Rua ")
testepalavra3
str_view(testepalavra3, "Av")
str_view(testepalavra3, "Av\")
str_view(testepalavra3, "Av\\")
str_view(testepalavra3, "Av$")
str_view(testepalavra3, "Av $")
str_view(testepalavra3, "Av*")
str_view(testepalavra3, "(Av)*")
str_view(testepalavra3, "^Av$*")
str_view(testepalavra3, "^Av$")
str_view(testepalavra3, "^Av")
str_view(testepalavra3, "^[Av]")
str_view(testepalavra3, "^[Av]$")
str_view(testepalavra3, "^[Av\\]$")
str_view(testepalavra3, "^[Av\\*]$")
str_view(testepalavra3, "[Av\\*]")
str_view(testepalavra3, "^[Av\\*]")
str_view(testepalavra3, "$[Av\\*]")
str_view(testepalavra3, "$[Av\\*]$")
str_view(testepalavra3, "$[Av*]$")
str_view(testepalavra3, "$[Av]$")
str_view(testepalavra3, "$[Av]")
str_view(testepalavra3, "$Av")
str_view(testepalavra3, "Av$")
str_view(testepalavra3, "Av$*")
str_view(testepalavra3, "RuaAv$*")
str_view(testepalavra3, "(RuaAv$)*")
str_view(testepalavra3, "(RuaAv$*)")
str_view(testepalavra3, "(Rua(Av$*))")
str_view(testepalavra3, "^(Rua(Av$*))")
str_view(testepalavra3, "^(Rua Av$*))")
str_view(testepalavra3, "^(Rua Av$*)")
str_view(testepalavra3, "^(Rua Av.$*)")
str_view(testepalavra3, "^(Rua Av.*)")
str_replace(testepalavra3, "^(Rua Av.*), "Av.")
str_replace(testepalavra3, "^(Rua Av.*)", "Av.")
# as.POSIXct(faxinas$Data, "UTC", format="%d/%m/%Y") tentar mudar pra as.POSIXct primeiro e depois pra as.Date
faxinas201819 <- faxinas201819 %>%
mutate(Data = as.numeric(Data), `Ocorreu?` = as.logical(`Ocorreu?`)) %>%
mutate(Data = convert_to_date(Data)) %>%
mutate(Valor = as.numeric(Valor),
`Ocorreu?` = as.character(`Ocorreu?`),
`Feedback Colhido?` = as.character(`Feedback Colhido?`)
) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
select(c(1:11)) %>% rename(Comentarios = "...11") %>%
remove_empty("rows")
faxinas201819 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2018-2019]GerenciamentodoAplicativo.xlsx", skip = 1, col_names = TRUE)
# as.POSIXct(faxinas$Data, "UTC", format="%d/%m/%Y") tentar mudar pra as.POSIXct primeiro e depois pra as.Date
faxinas201819 <- faxinas201819 %>%
mutate(Data = as.numeric(Data), `Ocorreu?` = as.logical(`Ocorreu?`)) %>%
mutate(Data = convert_to_date(Data)) %>%
mutate(Valor = as.numeric(Valor),
`Ocorreu?` = as.character(`Ocorreu?`),
`Feedback Colhido?` = as.character(`Feedback Colhido?`)
) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
select(c(1:11)) %>% rename(Comentarios = "...11") %>%
remove_empty("rows")
faxinas201819[faxinas201819 == TRUE] <- "Sim"
faxinas201819[faxinas201819 == FALSE] <- "Não"
faxinas201819$Data <- format(faxinas201819$Data, "%d/%m/%Y")
faxinas201819$Cliente <- str_trim(str_to_title(faxinas201819$Cliente))
faxinas201819$Comentarios <- str_trim(faxinas201819$Comentarios)
faxinas201819$Endereço <-  str_replace_all(faxinas201819$Endereço, "R\\.", "Rua ")
faxinas201819$Endereço <- str_replace_all(faxinas201819$Endereço, "R ", "Rua ")
faxinas201819$Endereço <- str_replace(faxinas201819$Endereço , "(^(^Rua$)*)", "Rua ")
faxinas201819$Endereço <- str_replace(faxinas201819$Endereço, "^(Rua Av.*)", "Av.")
faxinas201819$Endereço <- str_trim(str_to_title(faxinas201819$Endereço))
str_replace(testepalavra3, "^(Rua Av.*)", "Av.*")
str_replace(testepalavra3, "^(Rua Av.*)", "Av.* ")
str_replace(testepalavra3, "^(Rua Av.*)", "Av.$ ")
str_replace(testepalavra3, "^(Rua Av.*)", "Av."$)
faxinas201819 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2018-2019]GerenciamentodoAplicativo.xlsx", skip = 1, col_names = TRUE)
# as.POSIXct(faxinas$Data, "UTC", format="%d/%m/%Y") tentar mudar pra as.POSIXct primeiro e depois pra as.Date
faxinas201819 <- faxinas201819 %>%
mutate(Data = as.numeric(Data), `Ocorreu?` = as.logical(`Ocorreu?`)) %>%
mutate(Data = convert_to_date(Data)) %>%
mutate(Valor = as.numeric(Valor),
`Ocorreu?` = as.character(`Ocorreu?`),
`Feedback Colhido?` = as.character(`Feedback Colhido?`)
) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
select(c(1:11)) %>% rename(Comentarios = "...11") %>%
remove_empty("rows")
faxinas201819[faxinas201819 == TRUE] <- "Sim"
faxinas201819[faxinas201819 == FALSE] <- "Não"
faxinas201819$Data <- format(faxinas201819$Data, "%d/%m/%Y")
faxinas201819$Cliente <- str_trim(str_to_title(faxinas201819$Cliente))
faxinas201819$Comentarios <- str_trim(faxinas201819$Comentarios)
faxinas201819$Endereço <-  str_replace_all(faxinas201819$Endereço, "R\\.", "Rua ")
faxinas201819$Endereço <- str_replace_all(faxinas201819$Endereço, "R ", "Rua ")
faxinas201819$Endereço <- str_replace(faxinas201819$Endereço , "(^(^Rua$)*)", "Rua ")
faxinas201819$Endereço <- str_trim(str_to_title(faxinas201819$Endereço))
# carregando pacotes para manipulação das planilhas
library("stringr")
library("tidyverse")
library("janitor")
library("readxl")
library("DT")
options(DT.options = list(pageLength = 5))
faxinas201819 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2018-2019]GerenciamentodoAplicativo.xlsx", skip = 1, col_names = TRUE)
# as.POSIXct(faxinas$Data, "UTC", format="%d/%m/%Y") tentar mudar pra as.POSIXct primeiro e depois pra as.Date
faxinas201819 <- faxinas201819 %>%
mutate(Data = as.numeric(Data), `Ocorreu?` = as.logical(`Ocorreu?`)) %>%
mutate(Data = convert_to_date(Data)) %>%
mutate(Valor = as.numeric(Valor),
`Ocorreu?` = as.character(`Ocorreu?`),
`Feedback Colhido?` = as.character(`Feedback Colhido?`)
) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
select(c(1:11)) %>% rename(Comentarios = "...11") %>%
remove_empty("rows")
faxinas201819$Cliente <- str_trim(str_to_title(faxinas201819$Cliente))
faxinas201819$Comentarios <- str_trim(faxinas201819$Comentarios)
faxinas201819$Endereço <-  str_replace_all(faxinas201819$Endereço, "R\\.", "Rua ")
faxinas201819$Endereço <- str_replace_all(faxinas201819$Endereço, "R ", "Rua ")
faxinas201819$Endereço <- str_trim(str_to_title(faxinas201819$Endereço))
faxinas201819$Endereço <- str_replace(faxinas201819$Endereço , "(^(^Rua$)*)", "Rua ")
# carregando pacotes para manipulação das planilhas
library("stringr")
library("tidyverse")
library("janitor")
library("readxl")
library("DT")
options(DT.options = list(pageLength = 5))
faxinas201819 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2018-2019]GerenciamentodoAplicativo.xlsx", skip = 1, col_names = TRUE)
# as.POSIXct(faxinas$Data, "UTC", format="%d/%m/%Y") tentar mudar pra as.POSIXct primeiro e depois pra as.Date
faxinas201819 <- faxinas201819 %>%
mutate(Data = as.numeric(Data), `Ocorreu?` = as.logical(`Ocorreu?`)) %>%
mutate(Data = convert_to_date(Data)) %>%
mutate(Valor = as.numeric(Valor),
`Ocorreu?` = as.character(`Ocorreu?`),
`Feedback Colhido?` = as.character(`Feedback Colhido?`)
) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
select(c(1:11)) %>% rename(Comentarios = "...11") %>%
remove_empty("rows")
faxinas201819[faxinas201819 == TRUE] <- "Sim"
faxinas201819[faxinas201819 == FALSE] <- "Não"
faxinas201819$Data <- format(faxinas201819$Data, "%d/%m/%Y")
faxinas201819$Cliente <- str_trim(str_to_title(faxinas201819$Cliente))
faxinas201819$Comentarios <- str_trim(faxinas201819$Comentarios)
faxinas201819$Endereço <-  str_replace_all(faxinas201819$Endereço, "R\\.", "Rua ")
faxinas201819$Endereço <- str_replace_all(faxinas201819$Endereço, "R ", "Rua ")
faxinas201819$Endereço <- str_trim(str_to_title(faxinas201819$Endereço))
testepalavra3
str_view(testepalavra3, "(Rua|Av)")
str_view(testepalavra3, "Rua (Av)")
str_view(testepalavra3, "Rua ^(Av)")
str_view(testepalavra3, "Rua (Av)")
str_view(testepalavra3, "Rua (Av|Dce)")
str_view(testepalavra3, "Rua \\(Av|Dce)")
str_view(testepalavra3, "Rua\\(Av|Dce)")
str_view(testepalavra3, "Rua$(Av|Dce)")
str_view(testepalavra3, "Rua$(Av)")
str_view(testepalavra3, "Rua$[(Av)]")
str_view(testepalavra3, "Rua^[(Av)]")
str_view(testepalavra3, "Rua*[(Av)]")
str_view(testepalavra3, "Rua (Av)")
str_view(testepalavra3, "Rua(Av)")
str_view(testepalavra3, "Rua (Av)")
str_view(testepalavra3, "Rua| (Av)")
str_view(testepalavra3, "Rua|(Av)")
str_view(testepalavra3, "Rua| (Av)")
str_view(testepalavra3, "(Rua)|(Av)")
str_view(testepalavra3, "(Rua)&(Av)")
str_view(testepalavra3, "Rua|(Av)")
str_view(testepalavra3, "Rua (Av)")
str_view(testepalavra3, "Rua (Av) ")
str_view(testepalavra3, "Rua (Av)$")
str_view(testepalavra3, "Rua $(Av)")
str_view(testepalavra3, "Rua$(Av)")
str_view(testepalavra3, "Rua^(Av)")
str_view(testepalavra3, "Rua (Av)$")
str_view(testepalavra3, "Rua (Av.)$")
str_view(testepalavra3, "Rua (Av*)$")
str_view(testepalavra3, "Rua (Av)*")
str_view(testepalavra3, "Rua (Av)*$")
str_view(testepalavra3, "Rua $(Av)*")
str_view(testepalavra3, "Rua $(Av)$*")
str_view(testepalavra3, "Rua $(Av)$")
str_view(testepalavra3, "Rua $(Av)*")
str_view(testepalavra3, "Rua (Av)*")
str_view(testepalavra3, "Rua (Av)*$")
str_view(testepalavra3, "Rua ^(Av)*$")
str_view(testepalavra3, "Rua ^(Av)*")
str_view(testepalavra3, "Rua (^Av)*")
str_view(testepalavra3, "(Rua|Av) (^Av)*")
str_view(testepalavra3, "(Rua|Av)(^Av)*")
str_view(testepalavra3, "^(Rua|Av)(^Av)*")
str_view(testepalavra3, "^(Rua|Av)$(^Av)*")
str_view(testepalavra3, "^(Rua|Av)*(^Av)*")
str_view(testepalavra3, "^(Rua|Av)\\(^Av)*")
str_view(testepalavra3, "^(Rua|Av)\\^Av*")
str_view(testepalavra3, "^(Rua)\\^Av*")
str_view(testepalavra3, "Rua (^Av)*")
str_view(testepalavra3, "Rua(^Av)*")
str_view(testepalavra3, "^Rua(^Av)*")
str_view(testepalavra3, "^[Rua(^Av)]*")
str_view(testepalavra3, "^[^Rua(^Av)]*")
str_view(testepalavra3, "[^Rua(^Av)]*")
str_view(testepalavra3, "[^Rua(^Av)]")
str_view(testepalavra3, "[^Rua(^Av)]$")
str_view(testepalavra3, "[^Rua(^Av)]")
str_view(testepalavra3, "[^Rua|(^Av)]")
str_view(testepalavra3, "[((^Rua)|(^Av))]")
str_view(testepalavra3, "[((^)|(^Av))]")
str_view(testepalavra3, "[((^)|(^*Av))]")
str_view(testepalavra3, "[((^)|(^(Av))]")
str_view(testepalavra3, "[((^)|(^(^Av))]")
str_view(testepalavra3, "[((^)|(^Av))]")
str_view(testepalavra3, "[((^)|(^Av)) ]")
str_view(testepalavra3, "[((^)|(^Av))  ]")
str_view(testepalavra3, "[((^)|(^Av)) ]")
str_view(testepalavra3, "[(Rua(^)|(^Av)) ]")
str_view(testepalavra3, "[((^)|(^Av))  ]")
str_view(testepalavra3, "[((^)|(^Av))]")
str_view(testepalavra3, "Rua (Av)*$")
str_view(testepalavra3, "Rua$(Av)")
str_view(testepalavra3, "(Rua|Av)")
faxinas201920 <- read_xlsx("/home/elizemiku/Documents/PURECO-BAS/[2019-2020]GerenciamentodoAplicativo.xlsx", sheet = 2, skip = 1, col_names = TRUE)
faxinas201920 <- faxinas201920 %>%
mutate(`Feedback Colhido?` = as.logical(`Feedback Colhido?`),
Remarcou = as.logical(Remarcou), Valor = as.numeric(Valor)) %>%
mutate(`Feedback Colhido?` = as.character(`Feedback Colhido?`),
Remarcou = as.character(Remarcou)) %>%
mutate_at(c("Cliente", "Endereço"),
funs(ifelse(. == "-" |. == "--" | . == "/" | . == "ccc" | . == "rua", NA, .))) %>%
remove_empty("rows") %>% select(-1)
faxinas201920
faxinas201920[faxinas201920 == "1.0"] <- "Sim"
faxinas201920[faxinas201920 == "1.0"]
faxinas201920[faxinas201920$`Ocorreu?` == "1.0"] <- "Sim"
faxinas201920$`Ocorreu?`[faxinas201920$`Ocorreu?` == "1.0"] <- "Sim"
faxinas201819
faxinas201819$`Onde foi colhido?`
faxinas201920$`Onde foi colhido?`
faxinas201920$`Onde foi colhido`
shiny::runApp()
runApp()
faxinas201819
faxinas201920
as.POSIXct(faxinas201819$Data, "UTC", format = "%d/%m/%Y")
as.POSIXct(faxinas201819$Data, "UTC", format = "%d-%m-%Y")
as.POSIXct(faxinas201819$Data, "UTC", format = "%d/%m/%Y")
as.POSIXct(faxinas201819$Data, "UTC", format = "%d//%m//%Y")
as.POSIXct(faxinas201819$Data, "UTC", format = "%Y/%m/%d")
as.POSIXct(faxinas201819$Data, "UTC", format = "%d/%m/%Y")
weekdays(as.POSIXct(faxinas201819$Data, "UTC", format = "%d/%m/%Y"))
runApp()
runApp()
runApp()
read_xlsx("/home/elizemiku/Desktop/Relatório dos dados.xlsx")
read_csv("/home/elizemiku/Desktop/Relatório dos dados.csv")
runApp()
