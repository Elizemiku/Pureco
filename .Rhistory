shiny::runApp()
runApp()
runApp()
Tab1 <- tabPanel("First Tab",
fluidPage(
sidebarLayout(
sidebarPanel(
fileInput(inputId = "faxina",label = "Insira aqui a planilha de Gerenciamento do App (.csv):",multiple = FALSE,accept = c(".csv"),buttonLabel = "Selecionar arquivo"
),
fileInput(inputId = "disponibilidade",label = "Insira aqui a Disponibilidade das Mulheres:",multiple = FALSE,accept = c(".csv"),buttonLabel = "Selecionar arquivo"
),
dateInput("selecionarperiodo", language = "pt-BR", label = "Selecione a Data Inicial das Análises:", min="2018-04-12",format="dd/mm/yyyy",startview = "month",value = "2018-04-12"),
dateInput("selecionarperiodo2", language = "pt-BR", label = "Selecione a Data Final das Análises:", min="2018-06-01",format="dd/mm/yyyy",startview = "month"),
actionButton(label="OK!","botao",icon = icon("bar-chart-o"))
),
mainPanel(
htmlOutput("inicio")
)
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
Tab1 <- navbarPage("Pureco - Serviços de Limpeza",
tabPanel("Início",
titlePanel("Seja Bem-Vindo(a)!"),
fluidPage(tags$head(tags$link(rel = "stylesheet", type = "text/css" , href= "boostrap.min.css")),
sidebarLayout(
sidebarPanel(
fileInput(inputId = "faxina",label = "Insira aqui a planilha de Gerenciamento do App (.csv):",multiple = FALSE,accept = c(".csv"),buttonLabel = "Selecionar arquivo"
),
fileInput(inputId = "disponibilidade",label = "Insira aqui a Disponibilidade das Mulheres:",multiple = FALSE,accept = c(".csv"),buttonLabel = "Selecionar arquivo"
),
dateInput("selecionarperiodo", language = "pt-BR", label = "Selecione a Data Inicial das Análises:", min="2018-04-12",format="dd/mm/yyyy",startview = "month",value = "2018-04-12"),
dateInput("selecionarperiodo2", language = "pt-BR", label = "Selecione a Data Final das Análises:", min="2018-06-01",format="dd/mm/yyyy",startview = "month"),
actionButton(label="OK!","botao",icon = icon("bar-chart-o"))
),
mainPanel(
htmlOutput("inicio")
)
)
)
))
runApp()
runApp()
tags$head(tags$link(rel = "stylesheet", type = "text/css" , href= "boostrap.min.css"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Tab1 <- navbarPage("Pureco - Serviços de Limpeza",  theme = "https://stackpath.bootstrapcdn.com/bootswatch/3.4.1/flatly/bootstrap.min.css",
tabPanel("Início",
titlePanel("Seja Bem-Vindo(a)!"),
fluidPage(
sidebarLayout(
sidebarPanel(
fileInput(inputId = "faxina",label = "Insira aqui a planilha de Gerenciamento do App (.csv):",multiple = FALSE,accept = c(".csv"),buttonLabel = "Selecionar arquivo"
),
fileInput(inputId = "disponibilidade",label = "Insira aqui a Disponibilidade das Mulheres:",multiple = FALSE,accept = c(".csv"),buttonLabel = "Selecionar arquivo"
),
dateInput("selecionarperiodo", language = "pt-BR", label = "Selecione a Data Inicial das Análises:", min="2018-04-12",format="dd/mm/yyyy",startview = "month",value = "2018-04-12"),
dateInput("selecionarperiodo2", language = "pt-BR", label = "Selecione a Data Final das Análises:", min="2018-06-01",format="dd/mm/yyyy",startview = "month"),
actionButton(label="OK!","botao",icon = icon("bar-chart-o"))
),
mainPanel(
htmlOutput("inicio")
)
)
)
))
runApp()
runApp()
Tab1 <- navbarPage("Pureco - Serviços de Limpeza",  theme = "https://stackpath.bootstrapcdn.com/bootswatch/3.4.1/cerulean/bootstrap.min.css",
tabPanel("Início",
titlePanel("Seja Bem-Vindo(a)!"),
fluidPage(
sidebarLayout(
sidebarPanel(
fileInput(inputId = "faxina",label = "Insira aqui a planilha de Gerenciamento do App (.csv):",multiple = FALSE,accept = c(".csv"),buttonLabel = "Selecionar arquivo"
),
fileInput(inputId = "disponibilidade",label = "Insira aqui a Disponibilidade das Mulheres:",multiple = FALSE,accept = c(".csv"),buttonLabel = "Selecionar arquivo"
),
dateInput("selecionarperiodo", language = "pt-BR", label = "Selecione a Data Inicial das Análises:", min="2018-04-12",format="dd/mm/yyyy",startview = "month",value = "2018-04-12"),
dateInput("selecionarperiodo2", language = "pt-BR", label = "Selecione a Data Final das Análises:", min="2018-06-01",format="dd/mm/yyyy",startview = "month"),
actionButton(label="OK!","botao",icon = icon("bar-chart-o"))
),
mainPanel(
htmlOutput("inicio")
)
)
)
))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Tab1<- navbarPage("Pureco - Serviços de Limpeza",
#tema cerulean para ficar azul que nem o app do android
theme = "https://stackpath.bootstrapcdn.com/bootswatch/3.4.1/cerulean/bootstrap.min.css",
tabPanel("Início", titlePanel("Seja Bem-Vindo(a)!")))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
if(input$botao != 0){
output$inicio<-renderImage({
##imagem do pureco
img(src =  "purecologo.jpeg")
})
shiny::runApp('~/Documents/PURECO-BAS/Analises - ME712')
shiny::runApp()
shinytest::installDependencies()
options(shiny.fullstacktrace = TRUE)
shiny::runApp()
View(Tab4)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(Tab4)
View(Tab4)
install.packages("googledrive")
library("googledrive")
read.csv2("/home/elizemiku/Documents/PURECO-BAS/Analises - ME712/planilhaAGORAVAI.csv")
read_csv2("/home/elizemiku/Documents/PURECO-BAS/Analises - ME712/planilhaAGORAVAI.csv")
library("tidyverse")
read_csv2("/home/elizemiku/Documents/PURECO-BAS/Analises - ME712/planilhaAGORAVAI.csv")
faxinasteste <- read_csv2("/home/elizemiku/Documents/PURECO-BAS/Analises - ME712/planilhaAGORAVAI.csv")
faxinasteste[[1]]
faxinasteste[1,1]
faxinasteste[1,]
str(faxinasteste)
faxinasteste[1,]
View(faxinasteste[1,])
faxinasteste$Endereco
faxinasteste <- read_csv2("/home/elizemiku/Documents/PURECO-BAS/Analises - ME712/planilhaAGORAVAI.csv")
faxinasteste$Endereco
faxinasteste$Comentarios
faxinasteste$fax
library('tidyvers')
library('tidyvers'e)
library('tidyverse')
?tidyverse
shiny::runApp()
View(faxinasteste[1,])
weekdays
?weekdays
faxinasteste$Data<-as.POSIXct(faxinas$Data, "UTC", format="%d/%m/%Y")
faxinasteste$Data<-as.POSIXct(faxinasteste$Data, "UTC", format="%d/%m/%Y")
faxinasteste
weekdays(faxinasteste$Data)
faxinasteste$`Dia da Semana` <- weekdays(faxinasteste$Data)
faxinasteste$`Dia da Semana`
semana <- c("segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado", "domingo")
faxinasteste$`Dia da Semana` <- factor(faxinasteste$`Dia da Semana`, order = TRUE, levels = semana)
faxinasteste
head(faxinasteste)
View(head(faxinasteste))
faxinasteste$`Dia da Semana` <- weekdays(faxinasteste$Data)
semana <- c("segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado", "domingo")
faxinasteste$`Dia da Semana` <- factor(faxinasteste$`Dia da Semana`, order = TRUE, levels = semana)
faxinasteste$`Dia da Semana`
ggplot(faxinasteste%>%mutate(Quantidade=1)%>%filter(Tipo!="NA" & `Ocorreu?`=="TRUE"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y="sum", geom="bar")+
facet_wrap(~Tipo,scales = "free_x")+
ggtitle("Quantidade de Faxinas por Tipo e Dia da Semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("Quantidade de Faxinas")
library("tidyverse")
ggplot(faxinasteste%>%mutate(Quantidade=1)%>%filter(Tipo!="NA" & `Ocorreu?`=="TRUE"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y="sum", geom="bar")+
facet_wrap(~Tipo,scales = "free_x")+
ggtitle("Quantidade de Faxinas por Tipo e Dia da Semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("Quantidade de Faxinas")
weekdays(faxinasteste$Data)
faxinasteste$`Dia da Semana`<- weekdays(faxinas$Data)
faxinasteste$`Dia da Semana`<- weekdays(faxinasteste$Data)
semana <- c("segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado", "domingo")
faxinasteste$`Dia da Semana` <- factor(faxinasteste$`Dia da Semana`, order = TRUE, levels = semana)
faxinasteste
faxinasteste$`Dia da Semana`
faxinasteste$`Dia da Semana` <- factor(faxinasteste$`Dia da Semana`, levels = semana)
faxinasteste$`Dia da Semana`
semana <- c("segunda", "terça", "quarta", "quinta", "sexta", "sábado", "domingo")
faxinasteste$`Dia da Semana` <- factor(faxinasteste$`Dia da Semana`, levels = semana)
faxinasteste$`Dia da Semana`
faxinasteste$Data<-as.POSIXct(faxinas$Data, "UTC", format="%d/%m/%Y")
faxinasteste$Data<-as.POSIXct(faxinasteste$Data, "UTC", format="%d/%m/%Y")
faxinasteste$`Dia da Semana`<- weekdays(faxinasteste$Data)
faxinasteste$`Dia da Semana`
faxinasteste
faxinasteste$`Dia da Semana` <- factor(faxinas$`Dia da Semana`, order = TRUE)
faxinasteste$`Dia da Semana` <- factor(faxinasteste$`Dia da Semana`, order = TRUE)
faxinasteste
faxinasteste$`Dia da Semana`
faxinasteste$`Dia da Semana` <- factor(faxinasteste$`Dia da Semana`, order = c("segunda", "terça", "quarta", "quinta", "sexta", "sabado", "domingo"))
semana
faxinasteste$`Dia da Semana` <- factor(faxinasteste$`Dia da Semana`, order = TRUE, levels = semana)
faxinasteste$`Dia da Semana`
faxinasteste$`Dia da Semana`[1]
faxinasteste
faxinasteste[25]
faxinasteste[26]
faxinasteste[30]
ggplot(faxinasteste%>%mutate(Quantidade=1)%>%filter(Tipo!="NA" & `Ocorreu?`=="TRUE"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y="sum", geom="bar")+
facet_wrap(~Tipo,scales = "free_x")+
ggtitle("Quantidade de Faxinas por Tipo e Dia da Semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("Quantidade de Faxinas")
ggplot(faxinasteste%>%mutate(Quantidade=1)%>%filter(Mulher!="NA"&`Ocorreu?`=="TRUE"),
aes(x=Mulher,y=Quantidade,fill=Mulher))+stat_summary(fun.y="sum", geom="bar")+
ggtitle("Quantidade de Faxinas por Mulher")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("Quantidade de faxinas")
ggplot(faxinasteste%>%mutate(Quantidade=1)%>%filter(Mulher!="NA" & `Ocorreu?`=="TRUE"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y="sum", geom="bar")+
facet_wrap(~Mulher,scales = "free_x")+
ggtitle("Quantidade de Faxinas por Mulher e Dia da Semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("Quantidade de faxinas")
ggplot(faxinasteste %>% filter(Mulher != "NA") %>% mutate(Quantidade = 1),aes(x =`Dia da Semana`,y = Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y = "sum", geom = "bar") +
ggtitle("Quantidade de Faxinas por Dia da Semana") +
ylab("Quantidade de Faxinas") +
xlab("Dias da semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
shiny::runApp()
runApp()
runApp()
runApp()
ggplot(faxinasteste %>% filter(Mulher != "NA") %>% mutate(Quantidade = 1),aes(x =`Dia da Semana`,y = Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y = "sum", geom = "bar") +
ggtitle("Quantidade de Faxinas por Dia da Semana") +
ylab("Quantidade de Faxinas") +
xlab("Dias da semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(faxinasteste %>% filter(Mulher != "NA") %>% mutate(Quantidade = 1),aes(x =`Dia da Semana`,y = Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y = "sum", geom = "bar") +
ggtitle("Quantidade de Faxinas por Dia da Semana") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(faxinasteste %>% filter(Mulher != "NA") %>% mutate(Quantidade = 1),aes(x =`Dia da Semana`,y = Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y = "sum", geom = "bar") +
ggtitle("Quantidade de Faxinas por Dia da Semana") +
ylab("Quantidade de Faxinas") +
xlab("Dias da semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(faxinasteste %>% filter(Mulher != "NA") %>% mutate(Quantidade = 1),aes(x =`Dia da Semana`,y = Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y = "sum", geom = "bar") +
ggtitle("Quantidade de Faxinas por Dia da Semana") +
ylab("Quantidade de Faxinas") +
xlab("Dias da semana")+
theme(axis.title.x=element_blank(),
axis.ticks.x=element_blank())
runApp()
ggplot(faxinasteste %>% filter(Mulher != "NA") %>% mutate(Quantidade = 1),aes(x =`Dia da Semana`,y = Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y = "sum", geom = "bar") +
ggtitle("Quantidade de Faxinas por Dia da Semana") +
ylab("Quantidade de Faxinas") +
xlab("Dias da semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(faxinasteste%>%mutate(Quantidade=1)%>%filter(Mulher!="NA"&`Ocorreu?`=="TRUE"),
aes(x=Mulher,y=Quantidade,fill=Mulher))+stat_summary(fun.y="sum", geom="bar")+
ggtitle("Quantidade de Faxinas por Mulher")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("Quantidade de faxinas")
ggplot(faxinasteste%>%mutate(Quantidade=1)%>%filter(Mulher!="NA" & `Ocorreu?`=="TRUE"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y="sum", geom="bar")+
facet_wrap(~Mulher,scales = "free_x")+
ggtitle("Quantidade de Faxinas por Mulher e Dia da Semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("Quantidade de faxinas")
ggplot(faxinasteste%>%mutate(Quantidade=1)%>%filter(Tipo!="NA" & `Ocorreu?`=="TRUE"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y="sum", geom="bar")+
facet_wrap(~Tipo,scales = "free_x")+
ggtitle("Quantidade de Faxinas por Tipo e Dia da Semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("Quantidade de Faxinas")
ggplot(faxinasteste%>%mutate(Quantidade=1)%>%filter(Tipo!="NA" & `Ocorreu?`=="TRUE"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y="sum", geom="bar")+
facet_wrap(~Tipo,scales = "free_x")+
ggtitle("Quantidade de Faxinas por Tipo e Dia da Semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("Quantidade de Faxinas") + scale_colour_manual(name="Scenarios:", values=vars)
ggplot(faxinasteste%>%mutate(Quantidade=1)%>%filter(Tipo!="NA" & `Ocorreu?`=="TRUE"),
aes(x=`Dia da Semana`,y=Quantidade,fill=`Dia da Semana`))+
stat_summary(fun.y="sum", geom="bar")+
facet_wrap(~Tipo,scales = "free_x")+
ggtitle("Quantidade de Faxinas por Tipo e Dia da Semana")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
ylab("Quantidade de Faxinas") + scale_colour_manual(name="A")
runApp()
runApp()
runApp()
